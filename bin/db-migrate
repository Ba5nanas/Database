#!/usr/bin/env php
<?php

use Gt\Config\Config;
use Gt\Database\Connection\Settings;
use Gt\Database\Migration\Migrator;
/**
 * Database migration iterates over a set of incremental schema changes and
 * stores the currently-migrated schema version within the database itself.
 */
// The script must be run from the context of a project's root directory.
$repoBasePath = getcwd();
$autoloadPath = implode(DIRECTORY_SEPARATOR, [
	$repoBasePath,
	"vendor",
	"autoload.php",
]);
require($autoloadPath);

$forced = false;
if(!empty($argv[1])
&& ($argv[1] === "--force" || $argv[1] === "-f")) {
	$forced = true;
}

$config = new Config($repoBasePath);
$config->setDefault("$repoBasePath/vendor/phpgt/webengine", "config.default.ini");

$settings = new Settings(
	implode(DIRECTORY_SEPARATOR, [
		$repoBasePath,
		$config->get("database.query_path")
	]),
	$config->get("database.dsn"),
	$config->get("database.schema"),
	$config->get("database.host"),
	$config->get("database.port"),
	$config->get("database.username"),
	$config->get("database.password")
);

$migrationPath = implode(DIRECTORY_SEPARATOR, [
	$repoBasePath,
	$config->get("database.query_path"),
	$config->get("database.migration_path"),
]);
$migrationTable = $config->get("database.migration_table");

$migrator = new Migrator($settings, $migrationPath, $migrationTable, $forced);
$migrator->createMigrationTable();
$migrationCount = $migrator->getMigrationCount();
$migrationFileList = $migrator->getMigrationFileList();
$migrator->checkIntegrity($migrationFileList, $migrationCount);
$migrator->performMigration($migrationFileList, $migrationCount);